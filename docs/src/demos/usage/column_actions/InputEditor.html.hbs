---
category:
    - Usage
    - Column Actions
    - Classes
title: InputEditor
layout: demo.html
order: 400
dev: true
css: >
    .al-right {
    	text-align: right;
    }
---

{{#marked}}
## InputEditor

入力によるデータ編集を指定します。  

列の`action`に`InputEditor`クラスのインスタンスを利用すると、`readOnly`・`disabled`プロパティの制御を動的に行うことができますが、  
文字列`'input'`と定義した場合は、`readOnly`・`disabled`プロパティを制御出来ません。  

{{/marked}}

<div id="sample1" class="demo-grid small">
</div>

<label>change action properties : </label>
<select id="sample1mode">
    <option value="" selected="true">both false</option>
    <option value="readOnly">readOnly = true</option>
    <option value="disabled">disabled = true</option>
</select> <span id="sample1modememo"></span>

<script type="text/javascript">
//{{#wrapscript}}
//{{#copy "sample1"}}
/*global cheetahGrid*/
'use strict';
const inputEditorAction = new cheetahGrid.columns.action.InputEditor();
const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample1'),
	header: [

		{field: 'text1', caption: 'defined by string', width: 220, action: 'input'},

		//
		{field: 'text2', caption: 'defined by class instance', width: 220, action: inputEditorAction},

		{
			caption: 'show',
			width: 100,
			columnType: new cheetahGrid.columns.type.ButtonColumn({
				caption: 'SHOW',
			}),
			action: new cheetahGrid.columns.action.ButtonAction({
				action(rec) {
					alert(JSON.stringify(rec, null, '  '));
				},
			}),
		}


	],
});
grid.records = [
	{text1: 'text', text2: 'text'},
	{text1: 'text', text2: 'text'},
	{text1: 'text', text2: 'text'},
];

document.querySelector('#sample1mode').onchange = function() {
	//change action properties
	if (this.value === 'readOnly') {
		inputEditorAction.readOnly = true;
		inputEditorAction.disabled = false;
		document.querySelector('#sample1modememo').textContent = 'It will not toggle';
	} else if (this.value === 'disabled') {
		inputEditorAction.readOnly = false;
		inputEditorAction.disabled = true;
		document.querySelector('#sample1modememo').textContent = 'It will not toggle and does not respond when hovering the mouse';
	} else {
		inputEditorAction.readOnly = false;
		inputEditorAction.disabled = false;
		document.querySelector('#sample1modememo').textContent = 'both false';
	}
};
//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=sample1}}


{{#marked}}
### プロパティ



{{/marked}}

<div id="sample2" class="demo-grid small">
</div>
<script type="text/javascript">
//{{#wrapscript}}
//{{#copy "sample2"}}
/*global cheetahGrid*/
'use strict';
const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample2'),
	header: [
		{
			field: 'number',
			caption: 'type:number',
			width: 220,
			columnType: 'number',
			action: new cheetahGrid.columns.action.InputEditor({type: 'number'})
		},
		{
			field: 'number2',
			caption: 'class:al-right',
			width: 220,
			columnType: 'number',
			action: new cheetahGrid.columns.action.InputEditor({classList: ['al-right']})
		},
		{
			caption: 'show',
			width: 100,
			columnType: new cheetahGrid.columns.type.ButtonColumn({
				caption: 'SHOW',
			}),
			action: new cheetahGrid.columns.action.ButtonAction({
				action(rec) {
					alert(JSON.stringify(rec, null, '  '));
				},
			}),
		}


	],
});
grid.records = [
	{number: 1234, number2: 1234},
	{number: 1234.123, number2: 1234.123},
	{number: -1234.123, number2: -1234.123},
];
//{{/copy}}
//{{/wrapscript}}
</script>
{{#marked}}

```css
    .al-right {
    	text-align: right;
    }
```

{{/marked}}
{{> code class="js" code=sample2}}