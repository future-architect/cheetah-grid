---
category:
    - Usage
    - Column Types
    - Classes
title: NumberColumn
layout: demo.html
order: 900
---

{{#marked}}
## NumberColumn

{{#if lang_ja}}
数値をフォーマットして表示する  

コンストラクタ引数に指定した`format`で数値をフォーマットした値を表示します。  
`format`プロパティには、`Intl.NumberFormat`のインスタンスを指定してください。  

プロパティを指定しない場合、`new Intl.NumberFormat()`で生成したインスタンスを利用してフォーマットします。  
つまり、小数の扱い等のフォーマット仕様は`Intl.NumberFormat`の仕様に依存します。  
また、`columnType: 'number'`と指定した場合と同様の動作をします。  
{{else}}
Show formatted numbers.  

Format number with the style defined at `format` property in constructor.  
Please define the instance of `Intl.NumberFormat` class at `format` property.  

If property isn't defined, format number using the instance created by `new Intl.NumberFormat()` automatically.  
Which means format style completely depends on `Intl.NumberFormat`.  

In addition, this column type behave same as `columnType: 'number'`.  
{{/if}}


{{/marked}}

<div id="sample1" class="demo-grid small">
</div>
<script type="text/javascript">
//{{#wrapscript}}
//{{#copy "sample1"}}
/*global cheetahGrid*/
'use strict';

const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample1'),
	header: [
		{
			field: 'value',
			caption: 'text',
			width: 180,
		},
		{
			field: 'value',
			caption: 'default',
			width: 180,
			columnType: new cheetahGrid.columns.type.NumberColumn(),
		},
		{
			field: 'value',
			caption: 'columnType: number',
			width: 180,
			columnType: 'number',
		},
		{
			field: 'value',
			caption: 'JPY',
			width: 180,
			columnType: new cheetahGrid.columns.type.NumberColumn({
				format: new Intl.NumberFormat('ja-JP', {style: 'currency', currency: 'JPY'}),
			}),
		},
		{
			field: 'value',
			caption: 'USD',
			width: 180,
			columnType: new cheetahGrid.columns.type.NumberColumn({
				format: new Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD'}),
			}),
		},
		{
			field: 'value',
			caption: 'EUR',
			width: 180,
			columnType: new cheetahGrid.columns.type.NumberColumn({
				format: new Intl.NumberFormat('de-DE', {style: 'currency', currency: 'EUR'}),
			}),
		},
	],
});
grid.records = [
	{value: 1234567890},
	{value: 1234567890.12},
	{value: -1234567890.123},
	{value: -1234567890.123456},
];

//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=sample1}}

