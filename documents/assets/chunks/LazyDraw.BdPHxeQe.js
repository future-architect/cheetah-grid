import{a2 as i,p as v,v as p,$ as d,o as m,c as b,r as _,e as y}from"./framework.Dgjj3l-s.js";const k={ref:"root",class:"lazy-draw"},h={__name:"LazyDraw",setup(x){const r=i("root"),t=[];let s={observe(){}};if(typeof IntersectionObserver<"u"){let o=function(a,f){for(const l of a){const{target:c}=l;for(const u of t)if(u(c,l.isIntersecting)){t.splice(t.indexOf(u),1),f.unobserve(c);break}}};const e={rootMargin:"100px 20px"};s=new IntersectionObserver(o,e)}const n=v(!1);return p(async()=>{s.observe(r.value);let e=null;t.push((o,a)=>n.value?!0:(o!==r.value||(a?e=setTimeout(()=>{n.value=!0},300):e!=null&&clearTimeout(e)),!1))}),d(()=>{s.unobserve(r.value)}),(e,o)=>(m(),b("div",k,[n.value?_(e.$slots,"default",{key:0}):y("",!0)],512))}};export{h as default};
