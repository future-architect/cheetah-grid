import{_ as t,c as d,a5 as a,o as r}from"./chunks/framework.Dgjj3l-s.js";const f=JSON.parse('{"title":"Define Header Styles","description":"","frontmatter":{"order":170},"headers":[],"relativePath":"api/js/advanced_header/header_styles.md","filePath":"api/js/advanced_header/header_styles.md"}'),o={name:"api/js/advanced_header/header_styles.md"};function l(i,e,h,c,n,s){return r(),d("div",null,e[0]||(e[0]=[a('<h1 id="define-header-styles" tabindex="-1">Define Header Styles <a class="header-anchor" href="#define-header-styles" aria-label="Permalink to &quot;Define Header Styles&quot;">​</a></h1><h2 id="standard-header-style" tabindex="-1">Standard Header Style <a class="header-anchor" href="#standard-header-style" aria-label="Permalink to &quot;Standard Header Style&quot;">​</a></h2><p>Define header style by using <code>headerStyle</code> property.</p><p>Properties below are prepared in standard.</p><table tabindex="0"><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td><code>color</code></td><td>Define the color of header cell.</td></tr><tr><td><code>textAlign</code></td><td>Define the horizontal position of text in header cell.</td></tr><tr><td><code>textBaseline</code></td><td>Define the vertical position of text in header cell.</td></tr><tr><td><code>bgColor</code></td><td>Define the background color of header cell.</td></tr><tr><td><code>font</code></td><td>Define the font of header cell.</td></tr><tr><td><code>padding</code></td><td>Define the padding of header cell. If you set 4 values separately, please set the <code>Array</code>.</td></tr><tr><td><code>textOverflow</code></td><td>Define how to display when text overflows the area of a header cell. <code>clip</code> or <code>ellipsis</code> is available.</td></tr></tbody></table><h2 id="style-properties-per-header-type" tabindex="-1">Style Properties Per Header Type <a class="header-anchor" href="#style-properties-per-header-type" aria-label="Permalink to &quot;Style Properties Per Header Type&quot;">​</a></h2><h3 id="simple-text-header" tabindex="-1">Simple Text Header <a class="header-anchor" href="#simple-text-header" aria-label="Permalink to &quot;Simple Text Header&quot;">​</a></h3><p>Additional properties are available for simple text headers:</p><table tabindex="0"><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td><code>multiline</code></td><td>If <code>true</code>, accept multiline text caption.</td></tr><tr><td><code>lineHeight</code></td><td>Define the amount of space used for lines.</td></tr><tr><td><code>autoWrapText</code></td><td>Define whether to wrap automatically.</td></tr><tr><td><code>lineClamp</code></td><td>Define truncates text at a specific number of lines.</td></tr></tbody></table><h3 id="checkbox-header" tabindex="-1">Checkbox Header <a class="header-anchor" href="#checkbox-header" aria-label="Permalink to &quot;Checkbox Header&quot;">​</a></h3><p>Additional properties are available for checkbox headers:</p><table tabindex="0"><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td><code>checkBgColor</code></td><td>Define background color of checkbox, when it is checked.</td></tr><tr><td><code>uncheckBgColor</code></td><td>Define background color of checkbox, when it is unchecked.</td></tr><tr><td><code>borderColor</code></td><td>Define border color of checkbox.</td></tr></tbody></table><h3 id="multiline-text-header" tabindex="-1">Multiline Text Header <a class="header-anchor" href="#multiline-text-header" aria-label="Permalink to &quot;Multiline Text Header&quot;">​</a></h3><p>Check out <a href="./multiline_text_header.html#style-properties">Define Multiline Text Header</a>.</p><h3 id="sort-header" tabindex="-1">Sort Header <a class="header-anchor" href="#sort-header" aria-label="Permalink to &quot;Sort Header&quot;">​</a></h3><p>Check out <a href="./column_sort.html#style-properties">Sort by Column</a>.</p>',16)]))}const b=t(o,[["render",l]]);export{f as __pageData,b as default};
