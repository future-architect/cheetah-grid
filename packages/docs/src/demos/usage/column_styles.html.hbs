---
category: Usage
title: Column Styles
layout: demo.hbs
order: 120
---

{{#marked}}
## Standard Column Style
{{#if lang_ja}}
プロパティ`style`を利用して、列のスタイルを指定できます。

標準で用意されたプロパティは以下です。

|property|説明|
|---|---|
|color|セルのテキスト色を指定できます。|
|textAlign|セルのテキスト横位置を指定できます。|
|textBaseline|セルのテキスト縦位置を指定できます。|
|bgColor|セルの背景色を指定できます。|
|font|フォントを指定できます。|
|padding|パディングを指定できます。|
{{#if_v '0.6.0'}}
|textOverflow|テキストがセルをオーバーフローした場合の表示方法を指定できます。`clip`・`ellipsis`が利用できます。|
{{/if_v }}
{{else}}
Define column style by using `style` property.  

Properties below are prepared in standard.  

|property|description|
|---|---|
|color|define the color of cell.|
|textAlign|define the horizontal position of text in cell.|
|textBaseline|define the vertical position of text in cell.|
|bgColor|define the background color of cell.|
|font|define the font of cell.|
|padding|define the padding of cell. if you set 4 values separately, please set the `Array`.|
{{/if}}
{{#if_v '0.6.0'}}
|textOverflow|define how to display when text overflows the area of a cell. `clip` or `ellipsis` is available.|
{{/if_v }}
{{/marked}}

<div id="sample1" class="demo-grid small">
</div>
<script type="text/javascript">
//{{#wrapscript}}
//{{#copy "script1"}}
/*global cheetahGrid*/

const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample1'),
	header: [
		{field: 'no', caption: 'no', width: 50},

		// default
		{field: 'text', caption: 'default', width: 150},

		// color
		{field: 'text', caption: 'color', width: 150, style: {color: 'red'}},
		// textAlign
		{field: 'text', caption: 'right', width: 150, style: {textAlign: 'right'}},
		{field: 'text', caption: 'center', width: 150, style: {textAlign: 'center'}},
		// textBaseline
		{field: 'text', caption: 'top', width: 150, style: {textBaseline: 'top'}},
		{field: 'text', caption: 'bottom', width: 150, style: {textBaseline: 'bottom'}},

		// bgColor
		{field: 'text', caption: 'bgColor', width: 150, style: {bgColor: '#5f5'}},

		// font
		{field: 'text', caption: 'font', width: 150, style: {font: '9px sans-serif'}},
	],
});
grid.records = [
	{no: 1, text: 'sample text'},
	{no: 2, text: 'sample text'},
	{no: 3, text: 'sample text'},
];
//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=script1}}


<div id="sample2" class="demo-grid middle">
</div>
<script type="text/javascript">
//{{#wrapscript}}
//{{#copy "script2"}}
/*global cheetahGrid*/

const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample2'),
	header: [
		{field: 'no', caption: 'no', width: 50},

		// default
		{field: 'text', caption: 'default', width: 150},

		// padding
		{field: 'text', caption: 'padding', width: 150, style: {padding: 20}},
		{field: 'text', caption: 'padding', width: 150, style: {padding: [0/*top*/, 10/*right*/, 15/*bottom*/, 20/*left*/]}},

		//{{#if_v '0.6.0'}} textOverflow
		{field: 'longText', caption: 'textOverflow', width: 150, style: {textOverflow: 'ellipsis'}},
		//{{/if_v }}
	],
	defaultRowHeight: 80,
	headerRowHeight: 24,
});
grid.records = [
	{no: 1, text: 'sample text', longText: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'},
	{no: 2, text: 'sample text', longText: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'},
	{no: 3, text: 'sample text', longText: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'},
];
//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=script2}}

{{#marked}}

## Advanced Column Style
{{#if lang_ja}}
プロパティ`style`は以下のような高度な使い方も可能です。  

* 途中でスタイルを変更する  
* レコードによってスタイルを変更する  

これらは以下の仕組みによって実現可能です。  
* functionによる指定
* Styleインスタンスによる指定
{{else}}
`style` property can be used by the advanced ways below.  

* change style by each record

This can be done by functions below.  
* use the function
* use the instance of Style class
{{/if}}
{{/marked}}

<div id="sample3" class="demo-grid small">
</div>
<label>change background color of text</label>
<select id="sample3theme">
    <option value="" selected="true">default</option>
    <option value="red">red</option>
    <option value="#DFF">#DFF</option>
</select>
<script type="text/javascript">
//{{#wrapscript}}
//{{#copy "script3"}}
/*global cheetahGrid*/

const textFieldStyle = new cheetahGrid.columns.style.Style();
const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample3'),
	header: [
		{field: 'no', caption: 'no', width: 50},

		{
			field: 'value',
			caption: 'value',
			width: 150,
			columnType: 'number',
			//function
			style(rec) {
				return {
					color: rec.value <= 0 ? 'red' : undefined,
				};
			}
		},

		{
			field: 'text',
			caption: 'text',
			width: 150,
			//Style instance
			style: textFieldStyle
		},
	],
});
grid.records = [
	{no: 1, text: 'sample text', value: 100},
	{no: 2, text: 'sample text', value: 50},
	{no: 3, text: 'sample text', value: 0},
	{no: 4, text: 'sample text', value: -50},
];

const themeSelect = document.querySelector('#sample3theme');
themeSelect.onchange = function() {
	//change bg color
	if (themeSelect.value === 'default') {
		textFieldStyle.bgColor = null;
	} else {
		textFieldStyle.bgColor = themeSelect.value;
	}
};
//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=script3}}


{{#marked}}

## Header Style
{{#if lang_ja}}
プロパティ`headerStyle`を利用して、列ヘッダのスタイルを指定できます。  
{{else}}
Define column header style by using `headerStyle` property.  
{{/if}}
{{/marked}}


<div id="sample4" class="demo-grid small">
</div>
<script type="text/javascript">
//{{#wrapscript}}
//{{#copy "script4"}}
/*global cheetahGrid*/

const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample4'),
	header: [
		{field: 'no', caption: 'no', width: 50},

		// default
		{field: 'text', caption: 'default', width: 150},

		// color
		{field: 'text', caption: 'color', width: 150, headerStyle: {color: 'red'}},
		// textAlign
		{field: 'text', caption: 'center', width: 150, headerStyle: {textAlign: 'center'}},
		// textBaseline
		{field: 'text', caption: 'bottom', width: 150, headerStyle: {textBaseline: 'bottom'}},
		// bgColor
		{field: 'text', caption: 'bgColor', width: 150, headerStyle: {bgColor: '#5f5'}},
		// font
		{field: 'text', caption: 'font', width: 150, headerStyle: {font: '9px sans-serif'}},
		// textOverflow
		{field: 'text', caption: 'textOverflow clip', width: 150, headerStyle: {textOverflow: 'clip'}},
		{field: 'text', caption: 'textOverflow ellipsis', width: 150, headerStyle: {textOverflow: 'ellipsis'/*In the header this is the default*/}},
	],
});
grid.records = [
	{no: 1, text: 'data'},
	{no: 2, text: 'data'},
	{no: 3, text: 'data'},
];
//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=script4}}