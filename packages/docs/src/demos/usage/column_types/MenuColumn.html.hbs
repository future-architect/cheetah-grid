---
category:
    - Usage
    - Column Types
    - Classes
title: MenuColumn
layout: demo.hbs
order: 300
---

{{#marked}}
## MenuColumn

{{#if lang_ja}}
`value`から`caption`をマッピングして表示します。

編集可能にしたい場合は、[InlineMenuEditor](../column_actions/InlineMenuEditor.html)を利用てください。
{{else}}
Maps from `value` to `caption` and display it.

To make it editable, please use [InlineMenuEditor](../column_actions/InlineMenuEditor.html).
{{/if}}

### constructor properties

{{#if lang_ja}}
|property|説明|
|---|---|
|`options`|マッピングオプションを定義します。|
{{else}}
|property|description|
|---|---|
|`options`|Define mapping options.|
{{/if}}

### style properties

{{#if_v '0.8.0'}}

{{#if lang_ja}}
|property|説明|default|
|---|---|---|
|`appearance`|ドロップダウン矢印を表示するかどうかを定義します。（`'menulist-button'`または`'none'`を設定することができます）|`'menulist-button'`|
{{else}}
|property|description|default|
|---|---|---|
|`appearance`|Defines whether to display a dropdown arrow. (you can set `'menulist-button'` or `'none'`) |`'menulist-button'`|
{{/if}}
{{/if_v}}

{{#if lang_ja}}
{{#if_v '0.8.0'}}この他に、{{/if_v}}標準のスタイルが利用できます。
{{else}}
{{#if_v '0.8.0'}}In addition to this, {{/if_v}}Standard styles is available.
{{/if}}

- [Standard Column Style](../column_styles.html)


{{/marked}}

<div id="sample1" class="demo-grid small">
</div>

<script type="text/javascript">
/*eslint no-alert:0*/
//{{#wrapscript}}
//{{#copy "sample1"}}
/*global cheetahGrid*/

const options = [
	{value: '', caption: 'Empty'},
	{value: '1', caption: 'Option 1'},
	{value: '2', caption: 'Option 2'},
	{value: '3', caption: 'Option 3'},
	{value: '4', caption: 'Option 4'},
	{value: '5', caption: 'Option 5'},
	{value: '6', caption: 'Option 6'},
	{value: '7', caption: 'Option 7'},
];
const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample1'),
	header: [
		{
			field: 'sel',
			caption: 'MenuColumn',
			width: 260,
			columnType: new cheetahGrid.columns.type.MenuColumn({options}),
		},
		{
			field: 'sel2',
			caption: 'style',
			width: 260,
			columnType: new cheetahGrid.columns.type.MenuColumn({options}),
			style: {appearance: 'none'},
		},

		{
			caption: 'show',
			width: 100,
			columnType: new cheetahGrid.columns.type.ButtonColumn({
				caption: 'SHOW',
			}),
			action: new cheetahGrid.columns.action.ButtonAction({
				action(rec) {
					alert(JSON.stringify(rec, null, '  '));
				},
			}),
		}


	],
});
grid.records = [
	{sel: '', sel2: ''},
	{sel: '1', sel2: '1'},
	{sel: '2', sel2: '2'},
	{sel: '3', sel2: '3'},
	{sel: '', sel2: ''},
	{sel: '1', sel2: '1'},
	{sel: '2', sel2: '2'},
	{sel: '3', sel2: '3'},
	{sel: '', sel2: ''},
	{sel: '1', sel2: '1'},
	{sel: '2', sel2: '2'},
	{sel: '3', sel2: '3'},
];
//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=sample1}}

