---
category:
    - Usage
    - Column Actions
    - Classes
title: InlineInputEditor
layout: demo.hbs
order: 450
docVersion: 0.2.0
css: >
    .al-right {
    	text-align: right;
    }
---

{{#marked}}
## InlineInputEditor
{{/marked}}
<span class="warn">{{#if lang_ja}}InlineInputEditorは実験段階の機能です{{else}}InlineInputEditor is an experiment stage{{/if}}</span>

{{#marked}}

{{#if lang_ja}}
入力によるデータ編集を可能にします。  
{{else}}
Enables data editing by input.
{{/if}}

{{/marked}}

<div id="sample1" class="demo-grid small">
</div>

<label>change action properties : </label>
<select id="sample1mode">
    <option value="" selected="true">both false</option>
    <option value="readOnly">readOnly = true</option>
    <option value="disabled">disabled = true</option>
</select> <span id="sample1modememo"></span>

<script type="text/javascript">
/*eslint no-alert:0*/
//{{#wrapscript}}
//{{#copy "sample1"}}
/*global cheetahGrid*/

const inputEditor = new cheetahGrid.columns.action.InlineInputEditor();
const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample1'),
	header: [
		{field: 'text', caption: 'defined by InlineInputEditor', width: 260, action: inputEditor},

		{
			caption: 'show',
			width: 100,
			columnType: new cheetahGrid.columns.type.ButtonColumn({
				caption: 'SHOW',
			}),
			action: new cheetahGrid.columns.action.ButtonAction({
				action(rec) {
					alert(JSON.stringify(rec, null, '  '));
				},
			}),
		}


	],
});
grid.records = [
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
	{text: 'text'},
];

document.querySelector('#sample1mode').onchange = function() {
	//change action properties
	if (this.value === 'readOnly') {
		inputEditor.readOnly = true;
		inputEditor.disabled = false;
		document.querySelector('#sample1modememo').textContent = 'It will not toggle';
	} else if (this.value === 'disabled') {
		inputEditor.readOnly = false;
		inputEditor.disabled = true;
		document.querySelector('#sample1modememo').textContent = 'It will not toggle and does not respond when hovering the mouse';
	} else {
		inputEditor.readOnly = false;
		inputEditor.disabled = false;
		document.querySelector('#sample1modememo').textContent = 'both false';
	}
};
//{{/copy}}
//{{/wrapscript}}
</script>
{{> code class="js" code=sample1}}


{{#marked}}


{{#if lang_ja}}
### プロパティ

|property|説明|
|---|---|
|`type`|`<input>`要素の`type`属性を指定します。|
|`classList`|`<input>`要素の`class`を指定します。|
{{else}}
### Properties

|property|descrition|
|---|---|
|`type`|Specify the `type` attribute of the `<input>` element.|
|`classList`|Specify `class` of the `<input>` element.|
{{/if}}

{{/marked}}

<div id="sample2" class="demo-grid small">
</div>
<script type="text/javascript">
/*eslint no-alert:0*/
//{{#wrapscript}}
//{{#copy "sample2"}}
/*global cheetahGrid*/

const grid = new cheetahGrid.ListGrid({
	parentElement: document.querySelector('#sample2'),
	header: [
		{
			field: 'number',
			caption: 'type & classList',
			width: 220,
			columnType: 'number',
			action: new cheetahGrid.columns.action.InlineInputEditor({
				type: 'number',
				classList: ['al-right']
			})
		},
		{
			caption: 'show',
			width: 100,
			columnType: new cheetahGrid.columns.type.ButtonColumn({
				caption: 'SHOW',
			}),
			action: new cheetahGrid.columns.action.ButtonAction({
				action(rec) {
					alert(JSON.stringify(rec, null, '  '));
				},
			}),
		}


	],
});
grid.records = [
	{number: 1234},
	{number: 1234.123},
	{number: -1234.123},
];
//{{/copy}}
//{{/wrapscript}}
</script>
{{#marked}}

```css
    .al-right {
    	text-align: right;
    }
```

{{/marked}}
{{> code class="js" code=sample2}}