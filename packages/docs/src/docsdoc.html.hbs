---
layout: demo.html
css: >
    h4 {
    	border-bottom: 1px solid #aaa;
    }
    .result {
    	border: 1px solid #ddd;
    	padding: 0px 10px;
    }
---

{{#marked}}
# Document builder Document

このドキュメントは主にMetalsmithとHandlebarsを利用して構築しています。  
簡単に作成方法を記述します。


# Handlebars

[公式](http://handlebarsjs.com/)  

## 独自拡張

独自に拡張している機能についての説明を記載します。

### helpers

#### \{{marked}}  
記述したマークダウンをhtmlにするBlock helper。  

##### Params
* returns {String}  

{{/marked}}

{{#code class="hbs"}}
{{{{copy "marked"}}}}
{{#marked}}
### 例
* リスト  
* リスト  
{{/marked}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs marked}}}
</div>

{{#marked}}
#### \{{babel}}  
ES6で記述したjsコードをES5にトランスパイルするBlock helper。  

##### Params
* returns {String}    

{{/marked}}

{{#code class="hbs"}}
{{{{copy "babel"}}}}
<script type="text/javascript">
//{{#babel}}
'use strict';
const str = 'handlebars';
const data = `hello ${str}!`;// template literal
const obj = {data};// object literal
const {data: res} = obj;// destructuring assignment
console.log(JSON.stringify(res));
//{{/babel}}
</script>
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
{{#code class="html"}}
{{{hbs babel}}}
{{/code}}

{{#marked}}
#### \{{wrapscript}}  
jsコードをfunctionでwrapしてスコープを限定するBlock helper。  

##### Params
* returns {String}    

{{/marked}}

{{#code class="hbs"}}
{{{{copy "wrapscript"}}}}
<script type="text/javascript">
'use strict';
//{{#wrapscript}}
const str = 'handlebars';
const data = `hello ${str}!`;
console.log(data);
//{{/wrapscript}}
</script>
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
{{#code class="html"}}
{{{hbs wrapscript}}}
{{/code}}

{{#marked}}
#### \{{var}}  
内容を変数に格納する  

##### Params
* variable name {String}    
* context {*}    
* returns {void}    

{{/marked}}

{{#code class="hbs"}}
{{{{copy "var"}}}}
{{#var "html_varname"}}
<label style="color: red;">VAR</label>
{{/var}}
{{html_varname}}
{{{html_varname}}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs var}}}
</div>

{{#marked}}
#### \{{copy}}  
内容残して、内容を変数に格納する  

##### Params
* variable name {String}    
* context {*}    
* returns {String}    

{{/marked}}

{{#code class="hbs"}}
{{{{copy "copy"}}}}
{{#copy "html_varname"}}
<label style="color: red;">COPY</label>
{{/copy}}
{{html_varname}}
{{{html_varname}}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs copy}}}
</div>

{{#marked}}
#### \{{texttrim}}  
テキストの最初の空行と最後の空行を除去する。  

##### Params
* text {String}    
* returns {String}    

{{/marked}}

{{#code class="hbs"}}
{{{{copy "texttrim"}}}}
{{#var "text"}}

text　abc
text　def

text　ghi


{{/var}}
{{texttrim text}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
<pre>{{{hbs texttrim}}}</pre>
</div>


{{#marked}}
#### \{{concat}}  
文字列結合  

##### Params
* ...values {String}    
* returns {String}    

{{/marked}}

{{#code class="hbs"}}
{{{{copy "concat"}}}}
{{concat "text1"　"text2" "text3"}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs concat}}}
</div>

{{#marked}}
#### \{{json}}  
jsonをパースして変数格納するBlock helper。  

##### Params
* variable name {String}  
* returns {void}   

{{/marked}}

{{#code class="hbs"}}
{{{{copy "json"}}}}
{{#json "data"}}
	{"a": {"b": {"c": 1}}}
{{/json}}
{{data.a.b.c}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs json}}}
</div>

{{#marked}}
#### \{{lookups}}  
プロパティ値の連続参照  

##### Params
* object {Object}  
* ...property names {*}  
* returns {*}   

{{/marked}}

{{#code class="hbs"}}
{{{{copy "lookups"}}}}
{{var "key" "b"}}
{{#json "data"}}
	{"a": {"b": {"c": 1}}}
{{/json}}
{{lookups data "a" key "c"}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs lookups}}}
</div>

{{#marked}}
#### \{{or}}  
jsのorにあたる処理  

##### Params
* ...variables {*}  
* returns {*}   

{{/marked}}

{{#code class="hbs"}}
{{{{copy "or"}}}}
{{or "" 0 false "A" "B"}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs or}}}
</div>

{{#marked}}
#### \{{link}}  
アンカータグ作成  

##### Params
* url {String}  
* label {String}  
* returns {String}   

{{/marked}}

{{#code class="hbs"}}
{{{{copy "link"}}}}
{{link　"./index.html" "インデックス"}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{{hbs link}}}
</div>

{{#marked}}
#### \{{md_link}}  
マークダウンリンク作成  

##### Params
* url {String}  
* label {String}  
* returns {String}   

{{/marked}}

{{#code class="hbs"}}
{{{{copy "md_link"}}}}
{{md_link "./index.html" "インデックス"}}
{{{{/copy}}}}
{{/code}}
<strong>↓</strong>
<div class="result">
{{hbs md_link}}
</div>

{{#marked}}

#### \{{ms_path}}  
ルートからのPATHを指定すると、各htmlからの相対PATHに変換する。  

##### Params
* path {String}  
* returns {String}   

#### \{{ms_finalpath}}  
PATHを指定すると、Metalsmith（metalsmith-in-place）で最終的に変換されるはずの拡張子になる。  

##### Params
* path {String}  
* returns {String}   

{{/marked}}

